{"version":3,"sources":["../../src/index.ts","../node_modules/rlp/node_modules/bn.js/lib/bn.js"],"names":["v","output","i","module","exports","assert","val","msg","Error","inherits","ctor","superCtor","super_","TempCtor","prototype","constructor","BN","number","base","endian","isBN","this","negative","words","length","red","_init","Buffer","wordSize","window","require","e","parseHex4Bits","string","index","c","charCodeAt","parseHexByte","lowerBound","r","parseBase","str","start","end","mul","b","len","Math","min","move","dest","src","num","Array","isArray","max","left","right","cmp","_initNumber","_initArray","toString","replace","_parseHex","_parseBase","toArray","ceil","j","w","off","_strip","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","_move","clone","_expand","size","_normSign","Symbol","for","inspect","zeros","groupSizes","groupBases","padding","out","carry","groupSize","groupBase","isZero","modrn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","smallMulTo","self","a","lo","k","ncarry","rword","maxJ","ArrayType","byteLength","reqLength","res","allocUnsafe","allocate","_toArrayLikeLE","position","shift","_toArrayLikeBE","clz32","_countBits","t","_zeroBits","bitLength","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","add","sub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","x","y","mulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","s","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","mulp","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","toBitArray","q","iushln","bits","carryMask","newCarry","ishln","iushrn","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","andln","acc","modn","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","name","tmp","_tmp","K256","call","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","undefined","strip","input","outLen","prev","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u"],"mappings":"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","file":"static/js/0.6563eec8.chunk.js","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getLength = exports.decode = exports.encode = void 0;\nvar bn_js_1 = __importDefault(require(\"bn.js\"));\n/**\n * RLP Encoding based on: https://github.com/ethereum/wiki/wiki/%5BEnglish%5D-RLP\n * This function takes in a data, convert it to buffer if not, and a length for recursion\n * @param input - will be converted to buffer\n * @returns returns buffer of encoded data\n **/\nfunction encode(input) {\n    if (Array.isArray(input)) {\n        var output = [];\n        for (var i = 0; i < input.length; i++) {\n            output.push(encode(input[i]));\n        }\n        var buf = Buffer.concat(output);\n        return Buffer.concat([encodeLength(buf.length, 192), buf]);\n    }\n    else {\n        var inputBuf = toBuffer(input);\n        return inputBuf.length === 1 && inputBuf[0] < 128\n            ? inputBuf\n            : Buffer.concat([encodeLength(inputBuf.length, 128), inputBuf]);\n    }\n}\nexports.encode = encode;\n/**\n * Parse integers. Check if there is no leading zeros\n * @param v The value to parse\n * @param base The base to parse the integer into\n */\nfunction safeParseInt(v, base) {\n    if (v[0] === '0' && v[1] === '0') {\n        throw new Error('invalid RLP: extra zeros');\n    }\n    return parseInt(v, base);\n}\nfunction encodeLength(len, offset) {\n    if (len < 56) {\n        return Buffer.from([len + offset]);\n    }\n    else {\n        var hexLength = intToHex(len);\n        var lLength = hexLength.length / 2;\n        var firstByte = intToHex(offset + 55 + lLength);\n        return Buffer.from(firstByte + hexLength, 'hex');\n    }\n}\nfunction decode(input, stream) {\n    if (stream === void 0) { stream = false; }\n    if (!input || input.length === 0) {\n        return Buffer.from([]);\n    }\n    var inputBuffer = toBuffer(input);\n    var decoded = _decode(inputBuffer);\n    if (stream) {\n        return decoded;\n    }\n    if (decoded.remainder.length !== 0) {\n        throw new Error('invalid remainder');\n    }\n    return decoded.data;\n}\nexports.decode = decode;\n/**\n * Get the length of the RLP input\n * @param input\n * @returns The length of the input or an empty Buffer if no input\n */\nfunction getLength(input) {\n    if (!input || input.length === 0) {\n        return Buffer.from([]);\n    }\n    var inputBuffer = toBuffer(input);\n    var firstByte = inputBuffer[0];\n    if (firstByte <= 0x7f) {\n        return inputBuffer.length;\n    }\n    else if (firstByte <= 0xb7) {\n        return firstByte - 0x7f;\n    }\n    else if (firstByte <= 0xbf) {\n        return firstByte - 0xb6;\n    }\n    else if (firstByte <= 0xf7) {\n        // a list between  0-55 bytes long\n        return firstByte - 0xbf;\n    }\n    else {\n        // a list  over 55 bytes long\n        var llength = firstByte - 0xf6;\n        var length_1 = safeParseInt(inputBuffer.slice(1, llength).toString('hex'), 16);\n        return llength + length_1;\n    }\n}\nexports.getLength = getLength;\n/** Decode an input with RLP */\nfunction _decode(input) {\n    var length, llength, data, innerRemainder, d;\n    var decoded = [];\n    var firstByte = input[0];\n    if (firstByte <= 0x7f) {\n        // a single byte whose value is in the [0x00, 0x7f] range, that byte is its own RLP encoding.\n        return {\n            data: input.slice(0, 1),\n            remainder: input.slice(1),\n        };\n    }\n    else if (firstByte <= 0xb7) {\n        // string is 0-55 bytes long. A single byte with value 0x80 plus the length of the string followed by the string\n        // The range of the first byte is [0x80, 0xb7]\n        length = firstByte - 0x7f;\n        // set 0x80 null to 0\n        if (firstByte === 0x80) {\n            data = Buffer.from([]);\n        }\n        else {\n            data = input.slice(1, length);\n        }\n        if (length === 2 && data[0] < 0x80) {\n            throw new Error('invalid rlp encoding: byte must be less 0x80');\n        }\n        return {\n            data: data,\n            remainder: input.slice(length),\n        };\n    }\n    else if (firstByte <= 0xbf) {\n        // string is greater than 55 bytes long. A single byte with the value (0xb7 plus the length of the length),\n        // followed by the length, followed by the string\n        llength = firstByte - 0xb6;\n        if (input.length - 1 < llength) {\n            throw new Error('invalid RLP: not enough bytes for string length');\n        }\n        length = safeParseInt(input.slice(1, llength).toString('hex'), 16);\n        if (length <= 55) {\n            throw new Error('invalid RLP: expected string length to be greater than 55');\n        }\n        data = input.slice(llength, length + llength);\n        if (data.length < length) {\n            throw new Error('invalid RLP: not enough bytes for string');\n        }\n        return {\n            data: data,\n            remainder: input.slice(length + llength),\n        };\n    }\n    else if (firstByte <= 0xf7) {\n        // a list between  0-55 bytes long\n        length = firstByte - 0xbf;\n        innerRemainder = input.slice(1, length);\n        while (innerRemainder.length) {\n            d = _decode(innerRemainder);\n            decoded.push(d.data);\n            innerRemainder = d.remainder;\n        }\n        return {\n            data: decoded,\n            remainder: input.slice(length),\n        };\n    }\n    else {\n        // a list  over 55 bytes long\n        llength = firstByte - 0xf6;\n        length = safeParseInt(input.slice(1, llength).toString('hex'), 16);\n        var totalLength = llength + length;\n        if (totalLength > input.length) {\n            throw new Error('invalid rlp: total length is larger than the data');\n        }\n        innerRemainder = input.slice(llength, totalLength);\n        if (innerRemainder.length === 0) {\n            throw new Error('invalid rlp, List has a invalid length');\n        }\n        while (innerRemainder.length) {\n            d = _decode(innerRemainder);\n            decoded.push(d.data);\n            innerRemainder = d.remainder;\n        }\n        return {\n            data: decoded,\n            remainder: input.slice(totalLength),\n        };\n    }\n}\n/** Check if a string is prefixed by 0x */\nfunction isHexPrefixed(str) {\n    return str.slice(0, 2) === '0x';\n}\n/** Removes 0x from a given String */\nfunction stripHexPrefix(str) {\n    if (typeof str !== 'string') {\n        return str;\n    }\n    return isHexPrefixed(str) ? str.slice(2) : str;\n}\n/** Transform an integer into its hexadecimal value */\nfunction intToHex(integer) {\n    if (integer < 0) {\n        throw new Error('Invalid integer as argument, must be unsigned!');\n    }\n    var hex = integer.toString(16);\n    return hex.length % 2 ? \"0\" + hex : hex;\n}\n/** Pad a string to be even */\nfunction padToEven(a) {\n    return a.length % 2 ? \"0\" + a : a;\n}\n/** Transform an integer into a Buffer */\nfunction intToBuffer(integer) {\n    var hex = intToHex(integer);\n    return Buffer.from(hex, 'hex');\n}\n/** Transform anything into a Buffer */\nfunction toBuffer(v) {\n    if (!Buffer.isBuffer(v)) {\n        if (typeof v === 'string') {\n            if (isHexPrefixed(v)) {\n                return Buffer.from(padToEven(stripHexPrefix(v)), 'hex');\n            }\n            else {\n                return Buffer.from(v);\n            }\n        }\n        else if (typeof v === 'number' || typeof v === 'bigint') {\n            if (!v) {\n                return Buffer.from([]);\n            }\n            else {\n                return intToBuffer(v);\n            }\n        }\n        else if (v === null || v === undefined) {\n            return Buffer.from([]);\n        }\n        else if (v instanceof Uint8Array) {\n            return Buffer.from(v);\n        }\n        else if (bn_js_1.default.isBN(v)) {\n            // converts a BN to a Buffer\n            return Buffer.from(v.toArray());\n        }\n        else {\n            throw new Error('invalid type');\n        }\n    }\n    return v;\n}\n//# sourceMappingURL=index.js.map","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n"],"sourceRoot":""}